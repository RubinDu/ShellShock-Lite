//`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2023/11/13 13:34:55
// Design Name: 
// Module Name: spriterom
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module spriterom(input [4:0]	addr,
						output [31:0]	data
					 );

	logic [4:0] addr_reg;
	parameter [0:2**5-1][31:0] ROM = {
	//tank 0-f
	32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000001111000000000000000,
32'b00000000000011111100000000000000,
32'b00000000000011111100000000000000,
32'b00000000000011111100000000000000,
32'b00000000000111111110000000000000,
32'b00000000000111111111000000000000,
32'b00000000011111111111111000000000,
32'b00000000011111111111111000000000,
32'b00000000001010101010110000000000,
32'b00000000001101010101010000000000,
32'b00000000000111111111100000000000,
32'b00000000000111111111100000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000,
32'b00000000000000000000000000000000
	};
	assign data = ROM[addr];
endmodule
